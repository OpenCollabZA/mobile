'use strict';

var LearningUnitsLinkHandler = ($q, SynthLinkHandler, SynthQLoop) => {


	return (toolContent) => {

		// If there is not data to look at
		if(toolContent == null || Object.keys(toolContent).length === 0){
			return $q.when(toolContent);
		}

		var idx = 0;
		var announcementKeys = Object.keys(toolContent);

		function fixNextAnnoucement(){
			let currentIndex = idx++;
			if(currentIndex < announcementKeys.length){
				let unit = toolContent[announcementKeys[currentIndex]];
				// Fix the content
				return SynthLinkHandler.fixContent(unit.body)
					.then((fixedContent)=>{
						unit.body = fixedContent;
					})
					.then(() => {
						return SynthLinkHandler.fixContent(unit.description);
					})
					.then((fixedContent) =>{
						unit.description = fixedContent;
					});
			}

			// Nothing more to loop, so lets return a null to stop the SynthQLoop
			return null;
		}

		return SynthQLoop(fixNextAnnoucement)
			.then(()=>{
				return toolContent;
			});
	};
};
LearningUnitsLinkHandler.$inject = ['$q', 'SynthLinkHandler', 'SynthQLoop'];
export default LearningUnitsLinkHandler;
